{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\josep\\\\Documents\\\\GitHub\\\\safepass\\\\src\\\\components\\\\MovingLinearGradient.tsx\";\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Easing from \"react-native-web/dist/exports/Easing\";\nimport { LinearGradient as NativeLinearGradient } from 'expo-linear-gradient';\n\nvar LinearGradient = function (_Component) {\n  _inherits(LinearGradient, _Component);\n\n  var _super = _createSuper(LinearGradient);\n\n  function LinearGradient() {\n    _classCallCheck(this, LinearGradient);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(LinearGradient, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          color0 = _this$props.color0,\n          color1 = _this$props.color1,\n          children = _this$props.children,\n          points = _this$props.points,\n          style = _this$props.style;\n      var gStart = points.start;\n      var gEnd = points.end;\n      return React.createElement(NativeLinearGradient, {\n        colors: [color0, color1],\n        start: gStart,\n        end: gEnd,\n        style: style,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 7\n        }\n      }, children);\n    }\n  }]);\n\n  return LinearGradient;\n}(Component);\n\nvar AnimatedLinearGradient = Animated.createAnimatedComponent(LinearGradient);\nexport var presetColors = {\n  instagram: ['rgb(106, 57, 171)', 'rgb(151, 52, 160)', 'rgb(197, 57, 92)', 'rgb(231, 166, 73)', 'rgb(181, 70, 92)'],\n  firefox: ['rgb(236, 190, 55)', 'rgb(215, 110, 51)', 'rgb(181, 63, 49)', 'rgb(192, 71, 45)'],\n  sunrise: ['rgb(92, 160, 186)', 'rgb(106, 166, 186)', 'rgb(142, 191, 186)', 'rgb(172, 211, 186)', 'rgb(239, 235, 186)', 'rgb(212, 222, 206)', 'rgb(187, 216, 200)', 'rgb(152, 197, 190)', 'rgb(100, 173, 186)']\n};\n\nvar AnimatedGradient = function (_Component2) {\n  _inherits(AnimatedGradient, _Component2);\n\n  var _super2 = _createSuper(AnimatedGradient);\n\n  function AnimatedGradient() {\n    var _this;\n\n    _classCallCheck(this, AnimatedGradient);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super2.call.apply(_super2, [this].concat(args));\n    _this.state = {\n      color0: new Animated.Value(0),\n      color1: new Animated.Value(0)\n    };\n\n    _this.componentDidMount = function () {\n      _this.startAnimation();\n    };\n\n    _this.startAnimation = function () {\n      var _this$state = _this.state,\n          color0 = _this$state.color0,\n          color1 = _this$state.color1;\n      var _this$props2 = _this.props,\n          customColors = _this$props2.customColors,\n          speed = _this$props2.speed;\n      [color0, color1].forEach(function (color) {\n        return color.setValue(0);\n      });\n      Animated.parallel([color0, color1].map(function (animatedColor) {\n        return Animated.timing(animatedColor, {\n          toValue: customColors.length,\n          duration: customColors.length * speed,\n          easing: Easing.linear\n        });\n      })).start(_this.startAnimation);\n    };\n\n    return _this;\n  }\n\n  _createClass(AnimatedGradient, [{\n    key: \"render\",\n    value: function render() {\n      var _this$state2 = this.state,\n          color0 = _this$state2.color0,\n          color1 = _this$state2.color1;\n      var _this$props3 = this.props,\n          customColors = _this$props3.customColors,\n          children = _this$props3.children,\n          points = _this$props3.points,\n          style = _this$props3.style;\n      var preferColors = [];\n\n      while (preferColors.length < 2) {\n        preferColors.push(customColors.slice(preferColors.length).concat(customColors.slice(0, preferColors.length + 1)));\n      }\n\n      var interpolatedColors = [color0, color1].map(function (animatedColor, index) {\n        return animatedColor.interpolate({\n          inputRange: Array.from({\n            length: customColors.length + 1\n          }, function (v, k) {\n            return k;\n          }),\n          outputRange: preferColors[index]\n        });\n      });\n      return React.createElement(AnimatedLinearGradient, {\n        style: style,\n        points: points,\n        color0: interpolatedColors[0],\n        color1: interpolatedColors[1],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 7\n        }\n      }, children);\n    }\n  }]);\n\n  return AnimatedGradient;\n}(Component);\n\nAnimatedGradient.defaultProps = {\n  customColors: presetColors.instagram,\n  speed: 4000,\n  points: {\n    start: {\n      x: 0,\n      y: 0.4\n    },\n    end: {\n      x: 1,\n      y: 0.6\n    }\n  }\n};\nvar styles = StyleSheet.create({});\nexport default AnimatedGradient;","map":{"version":3,"sources":["C:/Users/josep/Documents/GitHub/safepass/src/components/MovingLinearGradient.tsx"],"names":["React","Component","LinearGradient","NativeLinearGradient","props","color0","color1","children","points","style","gStart","start","gEnd","end","AnimatedLinearGradient","Animated","createAnimatedComponent","presetColors","instagram","firefox","sunrise","AnimatedGradient","state","Value","componentDidMount","startAnimation","customColors","speed","forEach","color","setValue","parallel","map","animatedColor","timing","toValue","length","duration","easing","Easing","linear","preferColors","push","slice","concat","interpolatedColors","index","interpolate","inputRange","Array","from","v","k","outputRange","defaultProps","x","y","styles","StyleSheet","create"],"mappings":"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","sourcesContent":["import PropTypes from 'prop-types';\r\nimport React, { Component } from 'react';\r\nimport { StyleSheet, StatusBar, Dimensions, View, Animated, Easing } from 'react-native';\r\nimport { LinearGradient as NativeLinearGradient } from 'expo-linear-gradient';\r\n\r\n// const {height, width} = Dimensions.get('window');\r\n\r\ninterface ILinearGradientProps {\r\n  color0: string;\r\n  color1: string;\r\n  children: any;\r\n  points: {\r\n    start: any;\r\n    end: any;\r\n  };\r\n  style: any;\r\n}\r\n\r\nclass LinearGradient extends Component<ILinearGradientProps> {\r\n  render() {\r\n    const { color0, color1, children, points, style } = this.props;\r\n    const gStart = points.start;\r\n    const gEnd = points.end;\r\n    return (\r\n      <NativeLinearGradient\r\n        // colors={this.props.colors.map((c) => rgb2hex(c).hex)}\r\n        colors={[color0, color1]}\r\n        start={gStart}\r\n        end={gEnd}\r\n        style={style}>\r\n        {children}\r\n      </NativeLinearGradient>\r\n    );\r\n  }\r\n}\r\n\r\n// KEEP THIS LINE\r\nconst AnimatedLinearGradient = Animated.createAnimatedComponent(LinearGradient);\r\n// Animated.NativeLinearGradient = Animated.createAnimatedComponent(NativeLinearGradient)\r\n\r\nexport const presetColors = {\r\n  instagram: [\r\n    'rgb(106, 57, 171)',\r\n    'rgb(151, 52, 160)',\r\n    'rgb(197, 57, 92)',\r\n    'rgb(231, 166, 73)',\r\n    'rgb(181, 70, 92)',\r\n  ],\r\n  firefox: ['rgb(236, 190, 55)', 'rgb(215, 110, 51)', 'rgb(181, 63, 49)', 'rgb(192, 71, 45)'],\r\n  sunrise: [\r\n    'rgb(92, 160, 186)',\r\n    'rgb(106, 166, 186)',\r\n    'rgb(142, 191, 186)',\r\n    'rgb(172, 211, 186)',\r\n    'rgb(239, 235, 186)',\r\n    'rgb(212, 222, 206)',\r\n    'rgb(187, 216, 200)',\r\n    'rgb(152, 197, 190)',\r\n    'rgb(100, 173, 186)',\r\n  ],\r\n};\r\n\r\ninterface IAnimatedGradientProps {\r\n  customColors: string[];\r\n  speed: number;\r\n  points: any;\r\n  style: any;\r\n}\r\n\r\nclass AnimatedGradient extends Component<IAnimatedGradientProps> {\r\n  static defaultProps = {\r\n    customColors: presetColors.instagram,\r\n    speed: 4000,\r\n    points: {\r\n      start: { x: 0, y: 0.4 },\r\n      end: { x: 1, y: 0.6 },\r\n    },\r\n  };\r\n\r\n  state = {\r\n    color0: new Animated.Value(0),\r\n    color1: new Animated.Value(0),\r\n  };\r\n\r\n  componentDidMount = () => {\r\n    this.startAnimation();\r\n  };\r\n\r\n  startAnimation = () => {\r\n    const { color0, color1 } = this.state;\r\n    const { customColors, speed } = this.props;\r\n    [color0, color1].forEach(color => color.setValue(0));\r\n\r\n    Animated.parallel(\r\n      [color0, color1].map(animatedColor => {\r\n        return Animated.timing(animatedColor, {\r\n          toValue: customColors.length,\r\n          duration: customColors.length * speed,\r\n          easing: Easing.linear,\r\n        });\r\n      })\r\n    ).start(this.startAnimation);\r\n  };\r\n\r\n  render() {\r\n    const { color0, color1 } = this.state;\r\n    const { customColors, children, points, style } = this.props;\r\n    const preferColors: any = [];\r\n    // while (preferColors.length < customColors.length) {\r\n    while (preferColors.length < 2) {\r\n      preferColors.push(\r\n        customColors\r\n          .slice(preferColors.length)\r\n          .concat(customColors.slice(0, preferColors.length + 1))\r\n      );\r\n    }\r\n    const interpolatedColors = [color0, color1].map((animatedColor, index) => {\r\n      return animatedColor.interpolate({\r\n        inputRange: Array.from({ length: customColors.length + 1 }, (v, k) => k),\r\n        outputRange: preferColors[index],\r\n      });\r\n    });\r\n\r\n    return (\r\n      <AnimatedLinearGradient\r\n        style={style}\r\n        points={points}\r\n        color0={interpolatedColors[0]}\r\n        color1={interpolatedColors[1]}>\r\n        {children}\r\n      </AnimatedLinearGradient>\r\n    );\r\n  }\r\n}\r\n\r\nconst styles = StyleSheet.create({});\r\n\r\nexport default AnimatedGradient;\r\n"]},"metadata":{},"sourceType":"module"}