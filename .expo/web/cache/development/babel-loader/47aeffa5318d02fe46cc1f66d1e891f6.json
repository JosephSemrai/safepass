{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\josep\\\\Documents\\\\GitHub\\\\safepass\\\\src\\\\navigation\\\\AppNavigation.tsx\";\nimport React from 'react';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport AuthNavigation from \"./AuthNavigation\";\nimport NotesNavigation from \"./NotesNavigation\";\nimport LoadingScreen from \"../features/loader/LoadingScreen\";\nimport { useSelector } from 'react-redux';\nvar Stack = createStackNavigator();\n\nvar AppNavigation = function AppNavigation() {\n  var _useSelector = useSelector(function (state) {\n    return state.session;\n  }),\n      firebaseToken = _useSelector.firebaseToken,\n      isLoggedIn = _useSelector.isLoggedIn,\n      isFirebaseInitializedAndLoaded = _useSelector.isFirebaseInitializedAndLoaded,\n      isProfileInitializedAndLoaded = _useSelector.isProfileInitializedAndLoaded,\n      hasCompletedProfile = _useSelector.hasCompletedProfile;\n\n  var isLoading = !isFirebaseInitializedAndLoaded || !isProfileInitializedAndLoaded;\n  var isRegistering = !isLoggedIn || !hasCompletedProfile;\n  return isLoading ? React.createElement(LoadingScreen, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }\n  }) : React.createElement(Stack.Navigator, {\n    headerMode: \"none\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }\n  }, isRegistering ? React.createElement(React.Fragment, null, React.createElement(Stack.Screen, {\n    name: \"Auth\",\n    component: AuthNavigation,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 11\n    }\n  })) : React.createElement(React.Fragment, null, React.createElement(Stack.Screen, {\n    name: \"Notes\",\n    component: NotesNavigation,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 11\n    }\n  })));\n};\n\nexport default AppNavigation;","map":{"version":3,"sources":["C:/Users/josep/Documents/GitHub/safepass/src/navigation/AppNavigation.tsx"],"names":["React","createStackNavigator","AuthNavigation","NotesNavigation","LoadingScreen","useSelector","Stack","AppNavigation","state","session","firebaseToken","isLoggedIn","isFirebaseInitializedAndLoaded","isProfileInitializedAndLoaded","hasCompletedProfile","isLoading","isRegistering"],"mappings":";AAAA,OAAOA,KAAP,MAA2C,OAA3C;AACA,SAASC,oBAAT,QAAqC,yBAArC;AACA,OAAOC,cAAP;AACA,OAAOC,eAAP;AACA,OAAOC,aAAP;AACA,SAASC,WAAT,QAA4B,aAA5B;AASA,IAAMC,KAAK,GAAGL,oBAAoB,EAAlC;;AAEA,IAAMM,aAAuB,GAAG,SAA1BA,aAA0B,GAAM;AAAA,qBAQhCF,WAAW,CAAC,UAACG,KAAD;AAAA,WAAsBA,KAAK,CAACC,OAA5B;AAAA,GAAD,CARqB;AAAA,MAGlCC,aAHkC,gBAGlCA,aAHkC;AAAA,MAIlCC,UAJkC,gBAIlCA,UAJkC;AAAA,MAKlCC,8BALkC,gBAKlCA,8BALkC;AAAA,MAMlCC,6BANkC,gBAMlCA,6BANkC;AAAA,MAOlCC,mBAPkC,gBAOlCA,mBAPkC;;AAUpC,MAAMC,SAAS,GAAG,CAACH,8BAAD,IAAmC,CAACC,6BAAtD;AACA,MAAMG,aAAa,GAAG,CAACL,UAAD,IAAe,CAACG,mBAAtC;AAEA,SAAOC,SAAS,GACd,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADc,GAGd,oBAAC,KAAD,CAAO,SAAP;AAAiB,IAAA,UAAU,EAAC,MAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGC,aAAa,GACZ,0CACE,oBAAC,KAAD,CAAO,MAAP;AAAc,IAAA,IAAI,EAAC,MAAnB;AAA0B,IAAA,SAAS,EAAEd,cAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADY,GAKZ,0CAEE,oBAAC,KAAD,CAAO,MAAP;AAAc,IAAA,IAAI,EAAC,OAAnB;AAA2B,IAAA,SAAS,EAAEC,eAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CANJ,CAHF;AAgBD,CA7BD;;AA+BA,eAAeI,aAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { createStackNavigator } from '@react-navigation/stack';\r\nimport AuthNavigation from './AuthNavigation';\r\nimport NotesNavigation from './NotesNavigation';\r\nimport LoadingScreen from '../features/loader/LoadingScreen';\r\nimport { useSelector } from 'react-redux';\r\nimport { RootState } from '../app/rootReducer';\r\n\r\ntype AppStackParamList = {\r\n  Auth: object;\r\n  Notes: object;\r\n  Loading: object;\r\n};\r\n\r\nconst Stack = createStackNavigator<AppStackParamList>();\r\n\r\nconst AppNavigation: React.FC = () => {\r\n  // const [hasUserToken, setHasUserToken] = useState(false)\r\n  const {\r\n    firebaseToken,\r\n    isLoggedIn,\r\n    isFirebaseInitializedAndLoaded,\r\n    isProfileInitializedAndLoaded,\r\n    hasCompletedProfile,\r\n  } = useSelector((state: RootState) => state.session);\r\n\r\n  const isLoading = !isFirebaseInitializedAndLoaded || !isProfileInitializedAndLoaded;\r\n  const isRegistering = !isLoggedIn || !hasCompletedProfile;\r\n\r\n  return isLoading ? (\r\n    <LoadingScreen />\r\n  ) : (\r\n    <Stack.Navigator headerMode=\"none\">\r\n      {isRegistering ? (\r\n        <>\r\n          <Stack.Screen name=\"Auth\" component={AuthNavigation} />\r\n        </>\r\n      ) : (\r\n        <>\r\n          {/* User is signed in and done */}\r\n          <Stack.Screen name=\"Notes\" component={NotesNavigation} />\r\n        </>\r\n      )}\r\n    </Stack.Navigator>\r\n  );\r\n};\r\n\r\nexport default AppNavigation;\r\n"]},"metadata":{},"sourceType":"module"}