{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\josep\\\\Documents\\\\GitHub\\\\safepass\\\\src\\\\features\\\\login\\\\CodeInputStep.tsx\";\nimport View from \"react-native-web/dist/exports/View\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport React, { useState } from 'react';\nimport FancyInput from \"../../components/FancyInput\";\nimport FancyButton from \"../../components/FancyButton\";\nimport Header from \"../../components/Header\";\nimport firebase from 'firebase';\nimport colors from \"../../theme/colors\";\nimport BackButton from \"../../components/BackButton\";\n\nvar CodeInputStep = function CodeInputStep(_ref) {\n  var navigation = _ref.navigation,\n      route = _ref.route;\n\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      smsCode = _useState2[0],\n      setSmsCode = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isLoading = _useState4[0],\n      setIsLoading = _useState4[1];\n\n  var verificationId = route.params.verificationId;\n\n  var onSignIn = function onSignIn() {\n    var credential;\n    return _regeneratorRuntime.async(function onSignIn$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (smsCode) {\n              _context.next = 2;\n              break;\n            }\n\n            return _context.abrupt(\"return\", alert('Please enter a code.'));\n\n          case 2:\n            if (!(smsCode.length !== 6)) {\n              _context.next = 4;\n              break;\n            }\n\n            return _context.abrupt(\"return\", alert('Please enter a valid code. The code should be 6 digits long.'));\n\n          case 4:\n            try {\n              setIsLoading(true);\n              credential = firebase.auth.PhoneAuthProvider.credential(verificationId, smsCode);\n              firebase.auth().signInWithCredential(credential).then(function () {\n                return setIsLoading(false);\n              }).then(function () {\n                return navigation.navigate('ProfileSetup');\n              }).catch(function () {\n                alert('Something went wrong. The code may be invalid or expired.');\n                setIsLoading(false);\n              });\n            } catch (e) {\n              alert('Something went wrong.' + JSON.stringify(e));\n              setIsLoading(false);\n            }\n\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return React.createElement(SafeAreaView, {\n    style: {\n      backgroundColor: colors.contrastText,\n      alignItems: 'center'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 5\n    }\n  }, React.createElement(KeyboardAvoidingView, {\n    style: {\n      width: '80%',\n      height: '100%',\n      alignItems: 'stretch',\n      justifyContent: 'flex-start'\n    },\n    behavior: Platform.select({\n      ios: 'padding',\n      android: null\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }\n  }, React.createElement(BackButton, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  }), React.createElement(Header, {\n    emoji: \"white_check_mark\",\n    title: \"enter that code\",\n    subtitle: \"you'll receive a text with a code in a few seconds.\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }\n  }), React.createElement(FancyInput, {\n    label: \"code\",\n    autoFocus: true,\n    placeholder: \"enter your code here\",\n    value: smsCode,\n    onChangeText: function onChangeText(sms) {\n      return setSmsCode(sms);\n    },\n    keyboardType: \"numeric\",\n    returnKeyType: 'done',\n    maxLength: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }\n  }), React.createElement(View, {\n    style: {\n      flex: 1,\n      justifyContent: 'flex-end',\n      marginBottom: 10\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }\n  }, React.createElement(FancyButton, {\n    loading: isLoading,\n    onPress: onSignIn,\n    text: \"verify\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 11\n    }\n  }))));\n};\n\nexport default CodeInputStep;","map":{"version":3,"sources":["C:/Users/josep/Documents/GitHub/safepass/src/features/login/CodeInputStep.tsx"],"names":["React","useState","FancyInput","FancyButton","Header","firebase","colors","BackButton","CodeInputStep","navigation","route","smsCode","setSmsCode","isLoading","setIsLoading","verificationId","params","onSignIn","alert","length","credential","auth","PhoneAuthProvider","signInWithCredential","then","navigate","catch","e","JSON","stringify","backgroundColor","contrastText","alignItems","width","height","justifyContent","Platform","select","ios","android","sms","flex","marginBottom"],"mappings":"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","sourcesContent":["import {\r\n  Text,\r\n  View,\r\n  KeyboardAvoidingView,\r\n  TextInput,\r\n  TouchableOpacity,\r\n  SafeAreaView,\r\n  Platform,\r\n} from 'react-native';\r\n\r\nimport React, { useState } from 'react';\r\nimport { WebView } from 'react-native-webview';\r\nimport typography from '../../theme/typography';\r\nimport FancyInput from '../../components/FancyInput';\r\nimport FancyButton from '../../components/FancyButton';\r\nimport Header from '../../components/Header';\r\nimport spacing from '../../theme/spacing';\r\nimport firebase from 'firebase';\r\nimport {\r\n  CodeInputScreenNavigationProp,\r\n  CodeInputScreenRouteProp,\r\n} from '../../navigation/AuthNavigation';\r\nimport colors from '../../theme/colors';\r\nimport BackButton from '../../components/BackButton';\r\ninterface CodeInputStepProps {\r\n  nextStep: any;\r\n  verificationId: string;\r\n  navigation: CodeInputScreenNavigationProp;\r\n  route: CodeInputScreenRouteProp;\r\n}\r\n\r\nconst CodeInputStep: React.FC<CodeInputStepProps> = ({ navigation, route }: CodeInputStepProps) => {\r\n  const [smsCode, setSmsCode] = useState<string>();\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  const { verificationId } = route.params;\r\n\r\n  const onSignIn = async () => {\r\n    // Input validation\r\n    if (!smsCode) return alert('Please enter a code.');\r\n    if (smsCode.length !== 6)\r\n      return alert('Please enter a valid code. The code should be 6 digits long.');\r\n\r\n    // Attempt authentication\r\n    try {\r\n      setIsLoading(true);\r\n      const credential = firebase.auth.PhoneAuthProvider.credential(verificationId, smsCode);\r\n      firebase\r\n        .auth()\r\n        .signInWithCredential(credential)\r\n        .then(() => setIsLoading(false))\r\n        .then(() => navigation.navigate('ProfileSetup'))\r\n        .catch(() => {\r\n          alert('Something went wrong. The code may be invalid or expired.');\r\n          setIsLoading(false);\r\n        });\r\n    } catch (e) {\r\n      alert('Something went wrong.' + JSON.stringify(e));\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <SafeAreaView style={{ backgroundColor: colors.contrastText, alignItems: 'center' }}>\r\n      <KeyboardAvoidingView\r\n        style={{\r\n          width: '80%',\r\n          height: '100%',\r\n          alignItems: 'stretch',\r\n          justifyContent: 'flex-start',\r\n        }}\r\n        behavior={Platform.select({ ios: 'padding', android: null })}>\r\n        <BackButton />\r\n        <Header\r\n          emoji=\"white_check_mark\"\r\n          title=\"enter that code\"\r\n          subtitle=\"you'll receive a text with a code in a few seconds.\"\r\n        />\r\n\r\n        <FancyInput\r\n          label=\"code\"\r\n          autoFocus\r\n          placeholder=\"enter your code here\"\r\n          value={smsCode}\r\n          onChangeText={sms => setSmsCode(sms)}\r\n          keyboardType=\"numeric\"\r\n          returnKeyType={'done'}\r\n          maxLength={6}\r\n        />\r\n\r\n        <View style={{ flex: 1, justifyContent: 'flex-end', marginBottom: 10 }}>\r\n          <FancyButton loading={isLoading} onPress={onSignIn} text=\"verify\" />\r\n        </View>\r\n      </KeyboardAvoidingView>\r\n    </SafeAreaView>\r\n  );\r\n};\r\n\r\nexport default CodeInputStep;\r\n"]},"metadata":{},"sourceType":"module"}