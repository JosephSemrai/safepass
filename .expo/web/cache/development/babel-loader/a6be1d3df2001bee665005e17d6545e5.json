{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\josep\\\\Documents\\\\GitHub\\\\safepass\\\\src\\\\features\\\\login\\\\PictureSetup.tsx\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport React, { useState } from 'react';\nimport Header from \"../../components/Header\";\nimport FancyButton from \"../../components/FancyButton\";\nimport { useDispatch } from 'react-redux';\nimport Constants from 'expo-constants';\nimport * as ImagePicker from 'expo-image-picker';\nimport config from \"../../utils/config\";\nimport { setupProfilePicture } from \"./setupSlice\";\n\nvar PictureSetup = function PictureSetup(_ref) {\n  var nextStep = _ref.nextStep;\n  var dispatch = useDispatch();\n\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      image = _useState2[0],\n      setImage = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isLoading = _useState4[0],\n      setIsLoading = _useState4[1];\n\n  var _useState5 = useState(),\n      _useState6 = _slicedToArray(_useState5, 2),\n      cloudinaryURL = _useState6[0],\n      setCloudinaryURL = _useState6[1];\n\n  var handleSubmit = function handleSubmit() {\n    if (!image) {\n      alert('Please select an image.');\n      return;\n    }\n\n    setIsLoading(true);\n    var data = new FormData();\n    var base64Image = \"data:image/jpg;base64,\" + image.base64;\n    data.append('upload_preset', config.cloudinaryUploadPreset);\n    data.append('file', base64Image);\n    fetch(config.cloudinaryURL, {\n      method: 'POST',\n      body: data\n    }).then(function (response) {\n      return response.json();\n    }).then(function (data) {\n      if (data.secure_url !== '') {\n        var cloudinarySecureURLResponse = data.secure_url;\n        setCloudinaryURL(cloudinarySecureURLResponse);\n        dispatch(setupProfilePicture(cloudinarySecureURLResponse));\n        return nextStep();\n      }\n\n      setIsLoading(false);\n    }).catch(function (err) {\n      return alert(JSON.stringify(err));\n    });\n  };\n\n  var pickImage = function pickImage(camera) {\n    var cameraStatus, libraryStatus, result;\n    return _regeneratorRuntime.async(function pickImage$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (!Constants.platform.ios) {\n              _context.next = 8;\n              break;\n            }\n\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(ImagePicker.requestCameraPermissionsAsync());\n\n          case 3:\n            cameraStatus = _context.sent.status;\n            _context.next = 6;\n            return _regeneratorRuntime.awrap(ImagePicker.requestCameraPermissionsAsync());\n\n          case 6:\n            libraryStatus = _context.sent.status;\n\n            if (cameraStatus !== 'granted' || libraryStatus !== 'granted') {\n              alert('Sorry, we need camera roll permissions to make this work!');\n            }\n\n          case 8:\n            if (!camera) {\n              _context.next = 14;\n              break;\n            }\n\n            _context.next = 11;\n            return _regeneratorRuntime.awrap(ImagePicker.launchCameraAsync({\n              mediaTypes: ImagePicker.MediaTypeOptions.Images,\n              allowsEditing: true,\n              aspect: [4, 3],\n              quality: 1,\n              base64: true\n            }));\n\n          case 11:\n            _context.t0 = _context.sent;\n            _context.next = 17;\n            break;\n\n          case 14:\n            _context.next = 16;\n            return _regeneratorRuntime.awrap(ImagePicker.launchImageLibraryAsync({\n              mediaTypes: ImagePicker.MediaTypeOptions.Images,\n              allowsEditing: true,\n              aspect: [4, 3],\n              quality: 1,\n              base64: true\n            }));\n\n          case 16:\n            _context.t0 = _context.sent;\n\n          case 17:\n            result = _context.t0;\n\n            if (!result.cancelled) {\n              setImage(result);\n            }\n\n          case 19:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return React.createElement(View, {\n    style: {\n      height: '100%',\n      flex: 1\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 5\n    }\n  }, React.createElement(Header, {\n    emoji: \"camera\",\n    title: \"set a profile picture\",\n    subtitle: \"let ur friends identify u\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }\n  }), React.createElement(FancyButton, {\n    text: \"Take Picture\",\n    onPress: function onPress() {\n      return pickImage(true);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }\n  }), React.createElement(FancyButton, {\n    text: \"Select Picture\",\n    onPress: function onPress() {\n      return pickImage(false);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }\n  }), image && React.createElement(Image, {\n    source: {\n      uri: image.uri\n    },\n    style: {\n      width: 200,\n      height: 200\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 17\n    }\n  }), cloudinaryURL ? React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 24\n    }\n  }, cloudinaryURL) : React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 55\n    }\n  }, \"No Image\"), React.createElement(View, {\n    style: {\n      flex: 1,\n      justifyContent: 'flex-end',\n      marginBottom: 10\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }\n  }, React.createElement(FancyButton, {\n    loading: isLoading,\n    onPress: handleSubmit,\n    text: \"next\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default PictureSetup;","map":{"version":3,"sources":["C:/Users/josep/Documents/GitHub/safepass/src/features/login/PictureSetup.tsx"],"names":["React","useState","Header","FancyButton","useDispatch","Constants","ImagePicker","config","setupProfilePicture","PictureSetup","nextStep","dispatch","image","setImage","isLoading","setIsLoading","cloudinaryURL","setCloudinaryURL","handleSubmit","alert","data","FormData","base64Image","base64","append","cloudinaryUploadPreset","fetch","method","body","then","response","json","secure_url","cloudinarySecureURLResponse","catch","err","JSON","stringify","pickImage","camera","platform","ios","requestCameraPermissionsAsync","cameraStatus","status","libraryStatus","launchCameraAsync","mediaTypes","MediaTypeOptions","Images","allowsEditing","aspect","quality","launchImageLibraryAsync","result","cancelled","height","flex","uri","width","justifyContent","marginBottom"],"mappings":"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","sourcesContent":["import { View, Alert, Text, Image, ImagePickerResult } from 'react-native';\r\n// import DateTimePickerModal from 'react-native-modal-datetime-picker';\r\nimport React, { useState } from 'react';\r\nimport Header from '../../components/Header';\r\nimport FancyButton from '../../components/FancyButton';\r\nimport spacing from '../../theme/spacing';\r\nimport { useDispatch } from 'react-redux';\r\nimport Constants from 'expo-constants';\r\nimport * as ImagePicker from 'expo-image-picker';\r\nimport config from '../../utils/config';\r\nimport { setupProfilePicture } from './setupSlice';\r\nimport { AppDispatch } from '../../app/store';\r\n\r\ninterface PictureSetupProps {\r\n  nextStep: any;\r\n}\r\n\r\ninterface ImagePickerResultFix extends ImagePickerResult {\r\n  uri: string;\r\n}\r\n\r\nconst PictureSetup: React.FC<PictureSetupProps> = ({ nextStep }: PictureSetupProps) => {\r\n  const dispatch: AppDispatch = useDispatch();\r\n\r\n  const [image, setImage] = useState<ImagePickerResultFix>();\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [cloudinaryURL, setCloudinaryURL] = useState<string>();\r\n\r\n  const handleSubmit = () => {\r\n    if (!image) {\r\n      alert('Please select an image.');\r\n      return;\r\n    }\r\n\r\n    setIsLoading(true);\r\n\r\n    // Create request\r\n    const data = new FormData();\r\n    // @ts-ignore\r\n    const base64Image = `data:image/jpg;base64,${image.base64}`;\r\n    data.append('upload_preset', config.cloudinaryUploadPreset);\r\n    data.append('file', base64Image);\r\n\r\n    fetch(config.cloudinaryURL, {\r\n      method: 'POST',\r\n      body: data,\r\n    })\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        if (data.secure_url !== '') {\r\n          // Extract the URL from the response\r\n          const cloudinarySecureURLResponse = data.secure_url;\r\n\r\n          // Adds the URL to the setup state\r\n          setCloudinaryURL(cloudinarySecureURLResponse);\r\n          dispatch(setupProfilePicture(cloudinarySecureURLResponse));\r\n          return nextStep();\r\n        }\r\n\r\n        setIsLoading(false);\r\n      })\r\n      .catch(err => alert(JSON.stringify(err)));\r\n  };\r\n\r\n  const pickImage = async (camera: boolean) => {\r\n    // Request camera roll\r\n    if (Constants.platform.ios) {\r\n      const cameraStatus = (await ImagePicker.requestCameraPermissionsAsync()).status;\r\n      const libraryStatus = (await ImagePicker.requestCameraPermissionsAsync()).status;\r\n\r\n      if (cameraStatus !== 'granted' || libraryStatus !== 'granted') {\r\n        alert('Sorry, we need camera roll permissions to make this work!');\r\n      }\r\n    }\r\n\r\n    // Grab image\r\n    const result = camera\r\n      ? await ImagePicker.launchCameraAsync({\r\n          mediaTypes: ImagePicker.MediaTypeOptions.Images,\r\n          allowsEditing: true,\r\n          aspect: [4, 3],\r\n          quality: 1,\r\n          base64: true,\r\n        })\r\n      : await ImagePicker.launchImageLibraryAsync({\r\n          mediaTypes: ImagePicker.MediaTypeOptions.Images,\r\n          allowsEditing: true,\r\n          aspect: [4, 3],\r\n          quality: 1,\r\n          base64: true,\r\n        });\r\n\r\n    // console.log(result);\r\n\r\n    if (!result.cancelled) {\r\n      // @ts-ignore\r\n      setImage(result);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <View style={{ height: '100%', flex: 1 }}>\r\n      <Header emoji=\"camera\" title=\"set a profile picture\" subtitle=\"let ur friends identify u\" />\r\n      <FancyButton text=\"Take Picture\" onPress={() => pickImage(true)} />\r\n      <FancyButton text=\"Select Picture\" onPress={() => pickImage(false)} />\r\n      {image && <Image source={{ uri: image.uri }} style={{ width: 200, height: 200 }} />}\r\n      {cloudinaryURL ? <Text>{cloudinaryURL}</Text> : <Text>No Image</Text>}\r\n      <View style={{ flex: 1, justifyContent: 'flex-end', marginBottom: 10 }}>\r\n        <FancyButton loading={isLoading} onPress={handleSubmit} text=\"next\" />\r\n      </View>\r\n    </View>\r\n  );\r\n};\r\n\r\nexport default PictureSetup;\r\n"]},"metadata":{},"sourceType":"module"}