{"ast":null,"code":"import { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { setFirebaseToken, signedOut } from \"../app/sessionSlice\";\nimport firebase from 'firebase/app';\n\nrequire('firebase/auth');\n\nrequire('firebase/database');\n\nexport var firebaseConfig = {\n  apiKey: 'AIzaSyCNndD1hMiAR-yRuuLxSjRvViQGwcvLO0U',\n  authDomain: 'safepass-76e29.firebaseapp.com',\n  databaseURL: 'https://safepass-76e29.firebaseio.com',\n  projectId: 'safepass-76e29',\n  storageBucket: 'safepass-76e29.appspot.com',\n  messagingSenderId: '1063383168752',\n  appId: '1:1063383168752:web:1a3cad3e80d7c3df877435',\n  measurementId: 'G-SS5PFW3G9L'\n};\n\ntry {\n  !firebase.apps.length ? firebase.initializeApp(firebaseConfig) : firebase.app();\n} catch (err) {\n  if (!/already exists/.test(err.message)) {\n    console.error('Firebase initialization error raised', err.stack);\n  }\n}\n\nexport var db = firebase.database();\n\nvar FirebaseAuthentication = function FirebaseAuthentication() {\n  var dispatch = useDispatch();\n  useEffect(function () {\n    var unsubscribe = firebase.auth().onAuthStateChanged(function (user) {\n      if (user) {\n        user.getIdToken().then(function (token) {\n          return dispatch(setFirebaseToken(token));\n        });\n      } else {\n        dispatch(signedOut());\n      }\n    });\n    return unsubscribe;\n  });\n  return null;\n};\n\nexport default FirebaseAuthentication;","map":{"version":3,"sources":["C:/Users/josep/Documents/GitHub/safepass/src/components/FirebaseAuthenticator.tsx"],"names":["useEffect","useDispatch","setFirebaseToken","signedOut","firebase","require","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","apps","length","initializeApp","app","err","test","message","console","error","stack","db","database","FirebaseAuthentication","dispatch","unsubscribe","auth","onAuthStateChanged","user","getIdToken","then","token"],"mappings":"AAAA,SAAgBA,SAAhB,QAAiC,OAAjC;AAEA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,gBAAT,EAA2BC,SAA3B;AAIA,OAAOC,QAAP,MAAqB,cAArB;;AAGAC,OAAO,CAAC,eAAD,CAAP;;AACAA,OAAO,CAAC,mBAAD,CAAP;;AAGA,OAAO,IAAMC,cAAc,GAAG;AAC5BC,EAAAA,MAAM,EAAE,yCADoB;AAE5BC,EAAAA,UAAU,EAAE,gCAFgB;AAG5BC,EAAAA,WAAW,EAAE,uCAHe;AAI5BC,EAAAA,SAAS,EAAE,gBAJiB;AAK5BC,EAAAA,aAAa,EAAE,4BALa;AAM5BC,EAAAA,iBAAiB,EAAE,eANS;AAO5BC,EAAAA,KAAK,EAAE,4CAPqB;AAQ5BC,EAAAA,aAAa,EAAE;AARa,CAAvB;;AAYP,IAAI;AACF,GAACV,QAAQ,CAACW,IAAT,CAAcC,MAAf,GAAwBZ,QAAQ,CAACa,aAAT,CAAuBX,cAAvB,CAAxB,GAAiEF,QAAQ,CAACc,GAAT,EAAjE;AACD,CAFD,CAEE,OAAOC,GAAP,EAAY;AAEZ,MAAI,CAAC,iBAAiBC,IAAjB,CAAsBD,GAAG,CAACE,OAA1B,CAAL,EAAyC;AACvCC,IAAAA,OAAO,CAACC,KAAR,CAAc,sCAAd,EAAsDJ,GAAG,CAACK,KAA1D;AACD;AACF;;AAED,OAAO,IAAMC,EAAE,GAAGrB,QAAQ,CAACsB,QAAT,EAAX;;AAEP,IAAMC,sBAAgC,GAAG,SAAnCA,sBAAmC,GAAM;AAc7C,MAAMC,QAAqB,GAAG3B,WAAW,EAAzC;AAEAD,EAAAA,SAAS,CAAC,YAAM;AACd,QAAM6B,WAAW,GAAGzB,QAAQ,CAAC0B,IAAT,GAAgBC,kBAAhB,CAAmC,UAAAC,IAAI,EAAI;AAE7D,UAAIA,IAAJ,EAAU;AACRA,QAAAA,IAAI,CAACC,UAAL,GAAkBC,IAAlB,CAAuB,UAAAC,KAAK;AAAA,iBAAIP,QAAQ,CAAC1B,gBAAgB,CAACiC,KAAD,CAAjB,CAAZ;AAAA,SAA5B;AAED,OAHD,MAGO;AACLP,QAAAA,QAAQ,CAACzB,SAAS,EAAV,CAAR;AACD;AACF,KARmB,CAApB;AAUA,WAAO0B,WAAP;AACD,GAZQ,CAAT;AAcA,SAAO,IAAP;AACD,CA/BD;;AAiCA,eAAeF,sBAAf","sourcesContent":["import React, { useEffect } from 'react';\r\n\r\nimport { useDispatch } from 'react-redux';\r\nimport { setFirebaseToken, signedOut, fetchSessionProfile } from '../app/sessionSlice';\r\nimport { AppDispatch } from '../app/store';\r\n\r\n// Firebase config\r\nimport firebase from 'firebase/app';\r\n// import { SerializedError } from '@reduxjs/toolkit';\r\n// import { Alert } from 'react-native';\r\nrequire('firebase/auth');\r\nrequire('firebase/database');\r\n\r\n// Firebase configuration provided to us by the app creation process\r\nexport const firebaseConfig = {\r\n  apiKey: 'AIzaSyCNndD1hMiAR-yRuuLxSjRvViQGwcvLO0U',\r\n  authDomain: 'safepass-76e29.firebaseapp.com',\r\n  databaseURL: 'https://safepass-76e29.firebaseio.com',\r\n  projectId: 'safepass-76e29',\r\n  storageBucket: 'safepass-76e29.appspot.com',\r\n  messagingSenderId: '1063383168752',\r\n  appId: '1:1063383168752:web:1a3cad3e80d7c3df877435',\r\n  measurementId: 'G-SS5PFW3G9L',\r\n};\r\n\r\n// Initializes Firebase and creates an app instance\r\ntry {\r\n  !firebase.apps.length ? firebase.initializeApp(firebaseConfig) : firebase.app();\r\n} catch (err) {\r\n  // Catches 'already initialized' errors and logs it to enable hot reloading to continue to work\r\n  if (!/already exists/.test(err.message)) {\r\n    console.error('Firebase initialization error raised', err.stack);\r\n  }\r\n}\r\n\r\nexport const db = firebase.database();\r\n\r\nconst FirebaseAuthentication: React.FC = () => {\r\n  // const handleSession = () => {\r\n  //   dispatch(fetchSessionProfile()).catch((serializedError: SerializedError) => {\r\n  //     Alert.alert(\r\n  //       'Something went wrong :(',\r\n  //       JSON.stringify(serializedError),\r\n  //       // TODO: Remove cancel option\r\n  //       [{ text: 'Try Again', onPress: handleSession }, { text: 'Cancel (DEBUG ONLY)' }],\r\n\r\n  //       { cancelable: false }\r\n  //     );\r\n  //   });\r\n  // };\r\n\r\n  const dispatch: AppDispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = firebase.auth().onAuthStateChanged(user => {\r\n      // This block is only executed if we are authenticated with Firebase. As a result of authenticating, we will try to fetch/sign in to our server.\r\n      if (user) {\r\n        user.getIdToken().then(token => dispatch(setFirebaseToken(token)));\r\n        // .then(handleSession);\r\n      } else {\r\n        dispatch(signedOut());\r\n      }\r\n    });\r\n\r\n    return unsubscribe;\r\n  });\r\n\r\n  return null;\r\n};\r\n\r\nexport default FirebaseAuthentication;\r\n"]},"metadata":{},"sourceType":"module"}