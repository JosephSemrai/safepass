{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport axios from \"../../utils/axios\";\nexport var setFullName = function setFullName(fullName) {\n  var data;\n  return _regeneratorRuntime.async(function setFullName$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          data = axios.post('/session/name', {\n            fullName: fullName\n          }).then(function (res) {\n            return res.data;\n          });\n          console.log('Sending request');\n          return _context.abrupt(\"return\", data);\n\n        case 3:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\nexport var setUsername = function setUsername(username) {\n  var data;\n  return _regeneratorRuntime.async(function setUsername$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          data = axios.post('/session/username', {\n            username: username\n          }).then(function (res) {\n            return res.data;\n          });\n          return _context2.abrupt(\"return\", data);\n\n        case 2:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\nexport var searchSchools = function searchSchools(schoolName) {\n  var data;\n  return _regeneratorRuntime.async(function searchSchools$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          if (schoolName) {\n            _context3.next = 2;\n            break;\n          }\n\n          return _context3.abrupt(\"return\", console.log('API request handler for school search recieved no school name'));\n\n        case 2:\n          data = axios.get('/schools/find', {\n            params: {\n              name: schoolName\n            }\n          }).then(function (res) {\n            return res.data;\n          });\n          return _context3.abrupt(\"return\", data);\n\n        case 4:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\nexport default {\n  setFullName: setFullName,\n  setUsername: setUsername,\n  searchSchools: searchSchools\n};","map":{"version":3,"sources":["C:/Users/josep/Documents/GitHub/safepass/src/features/login/setupAPI.ts"],"names":["axios","setFullName","fullName","data","post","then","res","console","log","setUsername","username","searchSchools","schoolName","get","params","name"],"mappings":";AAAA,OAAOA,KAAP;AAEA,OAAO,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAAOC,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AACnBC,UAAAA,IADmB,GACZH,KAAK,CAACI,IAAN,CAAW,eAAX,EAA4B;AAAEF,YAAAA,QAAQ,EAARA;AAAF,WAA5B,EAA0CG,IAA1C,CAA+C,UAAAC,GAAG;AAAA,mBAAIA,GAAG,CAACH,IAAR;AAAA,WAAlD,CADY;AAEzBI,UAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;AAFyB,2CAGlBL,IAHkB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAApB;AAMP,OAAO,IAAMM,WAAW,GAAG,SAAdA,WAAc,CAAOC,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AACnBP,UAAAA,IADmB,GACZH,KAAK,CAACI,IAAN,CAAW,mBAAX,EAAgC;AAAEM,YAAAA,QAAQ,EAARA;AAAF,WAAhC,EAA8CL,IAA9C,CAAmD,UAAAC,GAAG;AAAA,mBAAIA,GAAG,CAACH,IAAR;AAAA,WAAtD,CADY;AAAA,4CAElBA,IAFkB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAApB;AAKP,OAAO,IAAMQ,aAAa,GAAG,SAAhBA,aAAgB,CAAOC,UAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cACtBA,UADsB;AAAA;AAAA;AAAA;;AAAA,4CAElBL,OAAO,CAACC,GAAR,CAAY,+DAAZ,CAFkB;;AAAA;AAKrBL,UAAAA,IALqB,GAKdH,KAAK,CAACa,GAAN,CAAU,eAAV,EAA2B;AAAEC,YAAAA,MAAM,EAAE;AAAEC,cAAAA,IAAI,EAAEH;AAAR;AAAV,WAA3B,EAA6DP,IAA7D,CAAkE,UAAAC,GAAG;AAAA,mBAAIA,GAAG,CAACH,IAAR;AAAA,WAArE,CALc;AAAA,4CAMpBA,IANoB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAtB;AASP,eAAe;AACbF,EAAAA,WAAW,EAAXA,WADa;AAEbQ,EAAAA,WAAW,EAAXA,WAFa;AAGbE,EAAAA,aAAa,EAAbA;AAHa,CAAf","sourcesContent":["import axios from '../../utils/axios';\r\n\r\nexport const setFullName = async (fullName: string) => {\r\n  const data = axios.post('/session/name', { fullName }).then(res => res.data);\r\n  console.log('Sending request');\r\n  return data;\r\n};\r\n\r\nexport const setUsername = async (username: string) => {\r\n  const data = axios.post('/session/username', { username }).then(res => res.data);\r\n  return data;\r\n};\r\n\r\nexport const searchSchools = async (schoolName: string) => {\r\n  if (!schoolName)\r\n    return console.log('API request handler for school search recieved no school name');\r\n  // const encodedSchoolName = encodeURI(schoolName);\r\n  // const requestURL = `https://services1.arcgis.com/Hp6G80Pky0om7QvQ/arcgis/rest/services/Public_Schools/FeatureServer/0/query?where=NAME%20%3D%20%27${encodedSchoolName}%27&outFields=NAME,ADDRESS,CITY,STATE,ZIP,ST_GRADE,END_GRADE,NCESID,DISTRICTID&outSR=4326&f=json`;\r\n  const data = axios.get('/schools/find', { params: { name: schoolName } }).then(res => res.data);\r\n  return data;\r\n};\r\n\r\nexport default {\r\n  setFullName,\r\n  setUsername,\r\n  searchSchools,\r\n};\r\n"]},"metadata":{},"sourceType":"module"}