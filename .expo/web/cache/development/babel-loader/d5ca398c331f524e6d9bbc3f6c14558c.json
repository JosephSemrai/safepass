{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\josep\\\\Documents\\\\GitHub\\\\safepass\\\\src\\\\features\\\\login\\\\SchoolDistrictStep.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport { Text, Autocomplete, Button, Spinner } from '@ui-kitten/components';\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport View from \"react-native-web/dist/exports/View\";\nimport DefaultLayout from \"../../components/layouts/DefaultLayout\";\nimport { db } from \"../../components/FirebaseAuthenticator\";\nimport LottieView from 'lottie-react-native';\nimport { setupDistrict } from \"./setupSlice\";\nimport { useDispatch } from 'react-redux';\n\nvar SchoolDistrictStep = function SchoolDistrictStep() {\n  var dispatch = useDispatch();\n\n  var _React$useState = React.useState(''),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      value = _React$useState2[0],\n      setValue = _React$useState2[1];\n\n  var _React$useState3 = React.useState(),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      districtData = _React$useState4[0],\n      setDistrictData = _React$useState4[1];\n\n  var _React$useState5 = React.useState(),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      filteredDistricts = _React$useState6[0],\n      setFilteredDistricts = _React$useState6[1];\n\n  React.useEffect(function () {\n    var unsubscribe = db.collection('districts').onSnapshot(function (querySnapshot) {\n      var districts = [];\n      querySnapshot.forEach(function (doc) {\n        districts.push(_objectSpread({\n          id: doc.id\n        }, doc.data()));\n      });\n      setDistrictData(districts);\n      setFilteredDistricts(districts);\n    }, function (error) {\n      return alert(error);\n    });\n    return unsubscribe;\n  }, []);\n\n  var filter = function filter(item, query) {\n    return item.name.toLowerCase().includes(query.toLowerCase());\n  };\n\n  var onChangeText = function onChangeText(query) {\n    setValue(query);\n    setFilteredDistricts(districtData.filter(function (item) {\n      return filter(item, query);\n    }));\n  };\n\n  var handleSelectDistrict = function handleSelectDistrict(district) {\n    dispatch(setupDistrict(district)).catch(function (e) {\n      return alert(e);\n    });\n  };\n\n  var SchoolDistrictListItem = function SchoolDistrictListItem(_ref) {\n    var item = _ref.item;\n    return React.createElement(Button, {\n      appearance: \"outline\",\n      size: \"large\",\n      onPress: function onPress() {\n        return alert(item.id);\n      },\n      style: {\n        marginTop: 5,\n        width: '100%',\n        paddingVertical: 30\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 5\n      }\n    }, item.name);\n  };\n\n  return React.createElement(DefaultLayout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    category: \"h1\",\n    style: {\n      marginTop: 30\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }\n  }, \"Select School District\"), React.createElement(Text, {\n    category: \"s1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }\n  }, \"Type in the name of the school district that you wish to join\"), React.createElement(Autocomplete, {\n    size: \"large\",\n    style: {\n      width: '100%',\n      marginTop: 50,\n      marginBottom: 20\n    },\n    placeholder: \"Type your school district name...\",\n    caption: \"Type the full name of your school district without abbreviation\",\n    value: value,\n    onChangeText: onChangeText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }\n  }), districtData == null && React.createElement(View, {\n    style: {\n      flex: 1,\n      flexDirection: 'row',\n      justifyContent: 'center'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }\n  }, Platform.OS === 'web' ? React.createElement(Spinner, {\n    size: \"giant\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }\n  }) : React.createElement(LottieView, {\n    autoPlay: true,\n    style: {\n      width: 100\n    },\n    source: require(\"../../assets/mainLoader.json\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }\n  })), React.createElement(FlatList, {\n    style: {\n      width: '100%'\n    },\n    data: filteredDistricts,\n    renderItem: SchoolDistrictListItem,\n    keyExtractor: function keyExtractor(item) {\n      return String(item.id);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default SchoolDistrictStep;","map":{"version":3,"sources":["C:/Users/josep/Documents/GitHub/safepass/src/features/login/SchoolDistrictStep.tsx"],"names":["React","Text","Autocomplete","Button","Spinner","DefaultLayout","db","LottieView","setupDistrict","useDispatch","SchoolDistrictStep","dispatch","useState","value","setValue","districtData","setDistrictData","filteredDistricts","setFilteredDistricts","useEffect","unsubscribe","collection","onSnapshot","querySnapshot","districts","forEach","doc","push","id","data","error","alert","filter","item","query","name","toLowerCase","includes","onChangeText","handleSelectDistrict","district","catch","e","SchoolDistrictListItem","marginTop","width","paddingVertical","marginBottom","flex","flexDirection","justifyContent","Platform","OS","require","String"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport {\r\n  Layout,\r\n  Text,\r\n  Autocomplete,\r\n  AutocompleteItem,\r\n  Button,\r\n  Icon,\r\n  Spinner,\r\n} from '@ui-kitten/components';\r\nimport { KeyboardAvoidingView, Platform, FlatList, View } from 'react-native';\r\nimport DefaultLayout from '../../components/layouts/DefaultLayout';\r\nimport { db } from '../../components/FirebaseAuthenticator';\r\nimport LottieView from 'lottie-react-native';\r\nimport { District, setupDistrict } from './setupSlice';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nconst SchoolDistrictStep = () => {\r\n  const dispatch = useDispatch();\r\n  const [value, setValue] = React.useState('');\r\n  const [districtData, setDistrictData] = React.useState<District[]>();\r\n  const [filteredDistricts, setFilteredDistricts] = React.useState<District[]>();\r\n\r\n  React.useEffect(() => {\r\n    const unsubscribe = db.collection('districts').onSnapshot(\r\n      querySnapshot => {\r\n        let districts: District[] = [];\r\n        querySnapshot.forEach(function(doc) {\r\n          districts.push({ id: doc.id, ...doc.data() } as District);\r\n        });\r\n        setDistrictData(districts);\r\n        setFilteredDistricts(districts);\r\n      },\r\n      error => alert(error)\r\n    );\r\n\r\n    return unsubscribe;\r\n  }, []);\r\n\r\n  const filter = (item: District, query: string) =>\r\n    item.name.toLowerCase().includes(query.toLowerCase());\r\n\r\n  const onChangeText = (query: string) => {\r\n    setValue(query);\r\n    setFilteredDistricts(districtData.filter(item => filter(item, query)) as District[]);\r\n  };\r\n\r\n  const handleSelectDistrict = (district: District) => {\r\n    dispatch(setupDistrict(district)).catch(e => alert(e));\r\n  };\r\n\r\n  const SchoolDistrictListItem = ({ item }: { item: District }) => (\r\n    <Button\r\n      appearance=\"outline\"\r\n      size=\"large\"\r\n      onPress={() => alert(item.id)}\r\n      style={{ marginTop: 5, width: '100%', paddingVertical: 30 }}>\r\n      {item.name}\r\n    </Button>\r\n  );\r\n\r\n  // const AlertIcon = props => <Icon {...props} name=\"alert-circle-outline\" />;\r\n\r\n  return (\r\n    <DefaultLayout>\r\n      <Text category=\"h1\" style={{ marginTop: 30 }}>\r\n        Select School District\r\n      </Text>\r\n      <Text category=\"s1\">Type in the name of the school district that you wish to join</Text>\r\n\r\n      <Autocomplete\r\n        size=\"large\"\r\n        style={{ width: '100%', marginTop: 50, marginBottom: 20 }}\r\n        placeholder=\"Type your school district name...\"\r\n        caption=\"Type the full name of your school district without abbreviation\"\r\n        value={value}\r\n        onChangeText={onChangeText}\r\n      />\r\n\r\n      {districtData == null && (\r\n        <View style={{ flex: 1, flexDirection: 'row', justifyContent: 'center' }}>\r\n          {Platform.OS === 'web' ? (\r\n            <Spinner size=\"giant\" />\r\n          ) : (\r\n            <LottieView\r\n              autoPlay\r\n              style={{\r\n                width: 100,\r\n              }}\r\n              source={require('../../assets/mainLoader.json')}\r\n            />\r\n          )}\r\n        </View>\r\n      )}\r\n\r\n      <FlatList\r\n        style={{ width: '100%' }}\r\n        data={filteredDistricts}\r\n        renderItem={SchoolDistrictListItem}\r\n        keyExtractor={item => String(item.id)}\r\n      />\r\n    </DefaultLayout>\r\n  );\r\n};\r\n\r\nexport default SchoolDistrictStep;\r\n"]},"metadata":{},"sourceType":"module"}