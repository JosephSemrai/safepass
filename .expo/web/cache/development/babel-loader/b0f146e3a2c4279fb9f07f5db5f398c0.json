{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\josep\\\\Documents\\\\GitHub\\\\safepass\\\\src\\\\navigation\\\\AppNavigation.tsx\";\nimport React from 'react';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport AuthNavigation from \"./AuthNavigation\";\nimport HomeNavigation from \"./HomeNavigation\";\nimport LoadingScreen from \"../features/loader/LoadingScreen\";\nimport { auth } from \"../components/FirebaseAuthenticator\";\nimport { useAuthState } from 'react-firebase-hooks/auth';\nvar Stack = createStackNavigator();\n\nvar AppNavigation = function AppNavigation() {\n  var _useAuthState = useAuthState(auth),\n      _useAuthState2 = _slicedToArray(_useAuthState, 3),\n      user = _useAuthState2[0],\n      loading = _useAuthState2[1],\n      error = _useAuthState2[2];\n\n  return loading ? React.createElement(LoadingScreen, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }\n  }) : React.createElement(Stack.Navigator, {\n    linking: linking,\n    headerMode: \"none\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }\n  }, !user ? React.createElement(React.Fragment, null, React.createElement(Stack.Screen, {\n    name: \"Auth\",\n    component: AuthNavigation,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 11\n    }\n  })) : React.createElement(React.Fragment, null, React.createElement(Stack.Screen, {\n    name: \"Main\",\n    component: HomeNavigation,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 11\n    }\n  })));\n};\n\nexport default AppNavigation;","map":{"version":3,"sources":["C:/Users/josep/Documents/GitHub/safepass/src/navigation/AppNavigation.tsx"],"names":["React","createStackNavigator","AuthNavigation","HomeNavigation","LoadingScreen","auth","useAuthState","Stack","AppNavigation","user","loading","error","linking"],"mappings":";;AAAA,OAAOA,KAAP,MAA2C,OAA3C;AACA,SAASC,oBAAT,QAAqC,yBAArC;AACA,OAAOC,cAAP;AACA,OAAOC,cAAP;AACA,OAAOC,aAAP;AAGA,SAASC,IAAT;AACA,SAASC,YAAT,QAA6B,2BAA7B;AAQA,IAAMC,KAAK,GAAGN,oBAAoB,EAAlC;;AAEA,IAAMO,aAAuB,GAAG,SAA1BA,aAA0B,GAAM;AAAA,sBAaLF,YAAY,CAACD,IAAD,CAbP;AAAA;AAAA,MAa7BI,IAb6B;AAAA,MAavBC,OAbuB;AAAA,MAadC,KAbc;;AAepC,SAAOD,OAAO,GACZ,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADY,GAGZ,oBAAC,KAAD,CAAO,SAAP;AAAiB,IAAA,OAAO,EAAEE,OAA1B;AAAmC,IAAA,UAAU,EAAC,MAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,CAACH,IAAD,GACC,0CACE,oBAAC,KAAD,CAAO,MAAP;AAAc,IAAA,IAAI,EAAC,MAAnB;AAA0B,IAAA,SAAS,EAAEP,cAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADD,GAKC,0CAEE,oBAAC,KAAD,CAAO,MAAP;AAAc,IAAA,IAAI,EAAC,MAAnB;AAA0B,IAAA,SAAS,EAAEC,cAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CANJ,CAHF;AAgBD,CA/BD;;AAiCA,eAAeK,aAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { createStackNavigator } from '@react-navigation/stack';\r\nimport AuthNavigation from './AuthNavigation';\r\nimport HomeNavigation from './HomeNavigation';\r\nimport LoadingScreen from '../features/loader/LoadingScreen';\r\nimport { useSelector } from 'react-redux';\r\nimport { RootState } from '../app/rootReducer';\r\nimport { auth } from '../components/FirebaseAuthenticator';\r\nimport { useAuthState } from 'react-firebase-hooks/auth';\r\n\r\ntype AppStackParamList = {\r\n  Auth: object;\r\n  Main: object;\r\n  Loading: object;\r\n};\r\n\r\nconst Stack = createStackNavigator<AppStackParamList>();\r\n\r\nconst AppNavigation: React.FC = () => {\r\n  // const [hasUserToken, setHasUserToken] = useState(false)\r\n  // const {\r\n  //   firebaseToken,\r\n  //   isLoggedIn,\r\n  //   isFirebaseInitializedAndLoaded,\r\n  //   isProfileInitializedAndLoaded,\r\n  //   hasCompletedProfile,\r\n  // } = useSelector((state: RootState) => state.session);\r\n\r\n  // const isLoading = !isFirebaseInitializedAndLoaded || !isProfileInitializedAndLoaded;\r\n  // const isRegistering = !isLoggedIn || !hasCompletedProfile;\r\n\r\n  const [user, loading, error] = useAuthState(auth);\r\n\r\n  return loading ? (\r\n    <LoadingScreen />\r\n  ) : (\r\n    <Stack.Navigator linking={linking} headerMode=\"none\">\r\n      {!user ? (\r\n        <>\r\n          <Stack.Screen name=\"Auth\" component={AuthNavigation} />\r\n        </>\r\n      ) : (\r\n        <>\r\n          {/* User is signed in and done */}\r\n          <Stack.Screen name=\"Main\" component={HomeNavigation} />\r\n        </>\r\n      )}\r\n    </Stack.Navigator>\r\n  );\r\n};\r\n\r\nexport default AppNavigation;\r\n"]},"metadata":{},"sourceType":"module"}