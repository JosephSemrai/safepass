{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\josep\\\\Documents\\\\GitHub\\\\safepass\\\\src\\\\components\\\\FancyButton.tsx\";\nimport React from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport { TouchableOpacity } from 'react-native-gesture-handler';\nimport colors from \"../theme/colors\";\nimport typography from \"../theme/typography\";\nvar styles = StyleSheet.create({\n  button: {\n    marginVertical: 10,\n    backgroundColor: colors.primaryColor,\n    borderRadius: 5,\n    height: 50,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  text: {\n    padding: 15\n  }\n});\n\nvar FancyButton = function FancyButton(props) {\n  return React.createElement(View, {\n    style: {\n      width: '100%'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }\n  }, React.createElement(TouchableOpacity, {\n    onPress: props.onPress,\n    style: [styles.button, props.style],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }, props.loading ? React.createElement(ActivityIndicator, {\n    color: colors.contrastText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 11\n    }\n  }) : React.createElement(Text, {\n    style: [styles.text, typography.buttonText],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 11\n    }\n  }, props.text)));\n};\n\nexport default FancyButton;","map":{"version":3,"sources":["C:/Users/josep/Documents/GitHub/safepass/src/components/FancyButton.tsx"],"names":["React","TouchableOpacity","colors","typography","styles","StyleSheet","create","button","marginVertical","backgroundColor","primaryColor","borderRadius","height","alignItems","justifyContent","text","padding","FancyButton","props","width","onPress","style","loading","contrastText","buttonText"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;;AAEA,SAASC,gBAAT,QAAiC,8BAAjC;AACA,OAAOC,MAAP;AACA,OAAOC,UAAP;AASA,IAAMC,MAAM,GAAGC,UAAU,CAACC,MAAX,CAAkB;AAC/BC,EAAAA,MAAM,EAAE;AACNC,IAAAA,cAAc,EAAE,EADV;AAENC,IAAAA,eAAe,EAAEP,MAAM,CAACQ,YAFlB;AAGNC,IAAAA,YAAY,EAAE,CAHR;AAINC,IAAAA,MAAM,EAAE,EAJF;AAMNC,IAAAA,UAAU,EAAE,QANN;AAONC,IAAAA,cAAc,EAAE;AAPV,GADuB;AAU/BC,EAAAA,IAAI,EAAE;AACJC,IAAAA,OAAO,EAAE;AADL;AAVyB,CAAlB,CAAf;;AAeA,IAAMC,WAAkC,GAAG,SAArCA,WAAqC,CAAAC,KAAK,EAAI;AAClD,SACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEC,MAAAA,KAAK,EAAE;AAAT,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,gBAAD;AAAkB,IAAA,OAAO,EAAED,KAAK,CAACE,OAAjC;AAA0C,IAAA,KAAK,EAAE,CAAChB,MAAM,CAACG,MAAR,EAAgBW,KAAK,CAACG,KAAtB,CAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGH,KAAK,CAACI,OAAN,GACC,oBAAC,iBAAD;AAAmB,IAAA,KAAK,EAAEpB,MAAM,CAACqB,YAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,GAGC,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE,CAACnB,MAAM,CAACW,IAAR,EAAcZ,UAAU,CAACqB,UAAzB,CAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAoDN,KAAK,CAACH,IAA1D,CAJJ,CADF,CADF;AAWD,CAZD;;AAcA,eAAeE,WAAf","sourcesContent":["import React from 'react';\r\nimport { Text, StyleSheet, GestureResponderEvent, View, ActivityIndicator } from 'react-native';\r\nimport { TouchableOpacity } from 'react-native-gesture-handler';\r\nimport colors from '../theme/colors';\r\nimport typography from '../theme/typography';\r\n\r\ninterface ButtonProps {\r\n  style?: any;\r\n  text: string;\r\n  onPress?: (event: GestureResponderEvent) => void;\r\n  loading?: boolean;\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  button: {\r\n    marginVertical: 10,\r\n    backgroundColor: colors.primaryColor,\r\n    borderRadius: 5,\r\n    height: 50,\r\n    // alignSelf: 'stretch',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  text: {\r\n    padding: 15,\r\n  },\r\n});\r\n\r\nconst FancyButton: React.FC<ButtonProps> = props => {\r\n  return (\r\n    <View style={{ width: '100%' }}>\r\n      <TouchableOpacity onPress={props.onPress} style={[styles.button, props.style]}>\r\n        {props.loading ? (\r\n          <ActivityIndicator color={colors.contrastText} />\r\n        ) : (\r\n          <Text style={[styles.text, typography.buttonText]}>{props.text}</Text>\r\n        )}\r\n      </TouchableOpacity>\r\n    </View>\r\n  );\r\n};\r\n\r\nexport default FancyButton;\r\n"]},"metadata":{},"sourceType":"module"}