{"ast":null,"code":"export var formatPhoneNumber = function formatPhoneNumber(phoneNumberString) {\n  var cleaned = ('' + phoneNumberString).replace(/\\D/g, '');\n  var match = cleaned.match(/^(\\d{3})(\\d{3})(\\d{4})$/);\n\n  if (match) {\n    return '(' + match[1] + ') ' + match[2] + '-' + match[3];\n  }\n};\nexport var normalizePhoneNumber = function normalizePhoneNumber(phoneNumberString) {\n  phoneNumberString = phoneNumberString.replace(/[^\\d+]+/g, '');\n  phoneNumberString = phoneNumberString.replace(/^00/, '+');\n  if (phoneNumberString.match(/^1/)) phoneNumberString = '+' + phoneNumberString;\n  if (!phoneNumberString.match(/^\\+/)) phoneNumberString = '+1' + phoneNumberString;\n  return phoneNumberString;\n};","map":{"version":3,"sources":["C:/Users/josep/Documents/GitHub/safepass/src/utils/formatPhoneNumber.ts"],"names":["formatPhoneNumber","phoneNumberString","cleaned","replace","match","normalizePhoneNumber"],"mappings":"AAAA,OAAO,IAAMA,iBAAiB,GAAG,SAApBA,iBAAoB,CAACC,iBAAD,EAA+B;AAC9D,MAAIC,OAAO,GAAG,CAAC,KAAKD,iBAAN,EAAyBE,OAAzB,CAAiC,KAAjC,EAAwC,EAAxC,CAAd;AACA,MAAIC,KAAK,GAAGF,OAAO,CAACE,KAAR,CAAc,yBAAd,CAAZ;;AACA,MAAIA,KAAJ,EAAW;AACT,WAAO,MAAMA,KAAK,CAAC,CAAD,CAAX,GAAiB,IAAjB,GAAwBA,KAAK,CAAC,CAAD,CAA7B,GAAmC,GAAnC,GAAyCA,KAAK,CAAC,CAAD,CAArD;AACD;AACF,CANM;AAQP,OAAO,IAAMC,oBAAoB,GAAG,SAAvBA,oBAAuB,CAACJ,iBAAD,EAA+B;AACjEA,EAAAA,iBAAiB,GAAGA,iBAAiB,CAACE,OAAlB,CAA0B,UAA1B,EAAsC,EAAtC,CAApB;AACAF,EAAAA,iBAAiB,GAAGA,iBAAiB,CAACE,OAAlB,CAA0B,KAA1B,EAAiC,GAAjC,CAApB;AACA,MAAIF,iBAAiB,CAACG,KAAlB,CAAwB,IAAxB,CAAJ,EAAmCH,iBAAiB,GAAG,MAAMA,iBAA1B;AACnC,MAAI,CAACA,iBAAiB,CAACG,KAAlB,CAAwB,KAAxB,CAAL,EAAqCH,iBAAiB,GAAG,OAAOA,iBAA3B;AAErC,SAAOA,iBAAP;AACD,CAPM","sourcesContent":["export const formatPhoneNumber = (phoneNumberString: string) => {\r\n  var cleaned = ('' + phoneNumberString).replace(/\\D/g, '');\r\n  var match = cleaned.match(/^(\\d{3})(\\d{3})(\\d{4})$/);\r\n  if (match) {\r\n    return '(' + match[1] + ') ' + match[2] + '-' + match[3];\r\n  }\r\n};\r\n\r\nexport const normalizePhoneNumber = (phoneNumberString: string) => {\r\n  phoneNumberString = phoneNumberString.replace(/[^\\d+]+/g, '');\r\n  phoneNumberString = phoneNumberString.replace(/^00/, '+');\r\n  if (phoneNumberString.match(/^1/)) phoneNumberString = '+' + phoneNumberString;\r\n  if (!phoneNumberString.match(/^\\+/)) phoneNumberString = '+1' + phoneNumberString;\r\n\r\n  return phoneNumberString;\r\n};\r\n"]},"metadata":{},"sourceType":"module"}