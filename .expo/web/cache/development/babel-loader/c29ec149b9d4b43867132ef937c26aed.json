{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\josep\\\\Documents\\\\GitHub\\\\safepass\\\\src\\\\features\\\\login\\\\SchoolStep.tsx\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport React, { useState } from 'react';\nimport Header from \"../../components/Header\";\nimport FancyInput from \"../../components/FancyInput\";\nimport { useDispatch } from 'react-redux';\nimport { setupSchool } from \"./setupSlice\";\nimport setupAPI from \"./setupAPI\";\nimport colors from \"../../theme/colors\";\nimport BackButton from \"../../components/BackButton\";\nimport { Ionicons } from '@expo/vector-icons';\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\n\nvar SchoolStep = function SchoolStep(_ref) {\n  var navigation = _ref.navigation;\n  var dispatch = useDispatch();\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isSearchLoading = _useState2[0],\n      setIsSearchLoading = _useState2[1];\n\n  var _useState3 = useState(),\n      _useState4 = _slicedToArray(_useState3, 2),\n      schools = _useState4[0],\n      setSchools = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      schoolModalVisible = _useState6[0],\n      setSchoolModalVisible = _useState6[1];\n\n  var _useState7 = useState(),\n      _useState8 = _slicedToArray(_useState7, 2),\n      schoolInput = _useState8[0],\n      setSchoolInput = _useState8[1];\n\n  var handleSchoolSearch = function handleSchoolSearch(schoolName) {\n    var schoolSearchResults;\n    return _regeneratorRuntime.async(function handleSchoolSearch$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            setIsSearchLoading(true);\n            _context.prev = 1;\n            _context.next = 4;\n            return _regeneratorRuntime.awrap(setupAPI.searchSchools(schoolName));\n\n          case 4:\n            schoolSearchResults = _context.sent;\n            setSchools(schoolSearchResults);\n            _context.next = 11;\n            break;\n\n          case 8:\n            _context.prev = 8;\n            _context.t0 = _context[\"catch\"](1);\n            alert(_context.t0);\n\n          case 11:\n            setIsSearchLoading(false);\n\n          case 12:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[1, 8]], Promise);\n  };\n\n  var SchoolListItem = function SchoolListItem(_ref2) {\n    var school = _ref2.school;\n\n    var toTitleCase = function toTitleCase(str) {\n      return str.replace(/\\w\\S*/g, function (txt) {\n        return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();\n      });\n    };\n\n    var schoolLevelConverter = function schoolLevelConverter(level) {\n      switch (level) {\n        case 1:\n          return 'Elementary School';\n\n        case 2:\n          return 'Middle School';\n\n        case 3:\n          return 'High School';\n\n        case 4:\n          return 'Post-Secondary School';\n\n        default:\n          return \"Unknown School Type: \" + level;\n      }\n    };\n\n    var schoolName = toTitleCase(school.name);\n    var schoolAddress = toTitleCase(school.address);\n    var schoolCity = toTitleCase(school.city);\n    var schoolType = schoolLevelConverter(school.level);\n    return React.createElement(TouchableHighlight, {\n      underlayColor: colors.primaryColorLight,\n      onPress: function onPress() {\n        dispatch(setupSchool(school));\n        navigation.navigate('PictureSetup');\n      },\n      style: {\n        marginTop: 8,\n        paddingVertical: 20,\n        paddingHorizontal: 10,\n        borderRadius: 15,\n        minHeight: 80,\n        justifyContent: 'flex-start',\n        alignItems: 'center',\n        flexDirection: 'row',\n        backgroundColor: colors.backgroundDifferentiator\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 7\n      }\n    }, React.createElement(React.Fragment, null, React.createElement(Ionicons, {\n      size: 24,\n      name: \"md-school\",\n      style: {\n        marginHorizontal: 15\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 11\n      }\n    }), React.createElement(View, {\n      style: {\n        justifyContent: 'center',\n        flex: 1\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 11\n      }\n    }, React.createElement(Text, {\n      style: {\n        fontWeight: 'bold',\n        fontSize: 14,\n        color: colors.lightContrastText\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 13\n      }\n    }, schoolType), React.createElement(Text, {\n      style: {\n        fontWeight: 'bold',\n        fontSize: 16\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 13\n      }\n    }, schoolName), React.createElement(Text, {\n      style: {\n        color: colors.lightContrastText\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 13\n      }\n    }, schoolAddress, \" \", schoolCity, \", \", school.state))));\n  };\n\n  return React.createElement(SafeAreaView, {\n    style: {\n      backgroundColor: colors.contrastText,\n      alignItems: 'center'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 5\n    }\n  }, React.createElement(KeyboardAvoidingView, {\n    style: {\n      width: '85%',\n      height: '100%',\n      alignItems: 'stretch',\n      justifyContent: 'flex-start'\n    },\n    behavior: Platform.select({\n      ios: 'padding',\n      android: null\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }\n  }, React.createElement(BackButton, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 9\n    }\n  }), React.createElement(Header, {\n    emoji: \"school\",\n    title: \"let's find ur friends\",\n    subtitle: \"we'll find people that u might know at ur school\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 9\n    }\n  }), React.createElement(FancyInput, {\n    placeholder: \"type in your school's name\",\n    onChangeText: function onChangeText(schoolName) {\n      handleSchoolSearch(schoolName);\n      setSchoolInput(schoolName);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 9\n    }\n  }), isSearchLoading ? React.createElement(ActivityIndicator, {\n    style: {\n      padding: 10\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 28\n    }\n  }) : null, (schools == null ? void 0 : schools.length) === 0 && schoolInput ? React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 13\n    }\n  }, \"No Schools Found\")) : React.createElement(FlatList, {\n    keyboardShouldPersistTaps: \"handled\",\n    data: schools,\n    renderItem: function renderItem(_ref3) {\n      var item = _ref3.item;\n      return React.createElement(SchoolListItem, {\n        school: item,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 39\n        }\n      });\n    },\n    keyExtractor: function keyExtractor(school) {\n      return school._id;\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 11\n    }\n  })));\n};\n\nexport default SchoolStep;","map":{"version":3,"sources":["C:/Users/josep/Documents/GitHub/safepass/src/features/login/SchoolStep.tsx"],"names":["React","useState","Header","FancyInput","useDispatch","setupSchool","setupAPI","colors","BackButton","Ionicons","SchoolStep","navigation","dispatch","isSearchLoading","setIsSearchLoading","schools","setSchools","schoolModalVisible","setSchoolModalVisible","schoolInput","setSchoolInput","handleSchoolSearch","schoolName","searchSchools","schoolSearchResults","alert","SchoolListItem","school","toTitleCase","str","replace","txt","charAt","toUpperCase","substr","toLowerCase","schoolLevelConverter","level","name","schoolAddress","address","schoolCity","city","schoolType","primaryColorLight","navigate","marginTop","paddingVertical","paddingHorizontal","borderRadius","minHeight","justifyContent","alignItems","flexDirection","backgroundColor","backgroundDifferentiator","marginHorizontal","flex","fontWeight","fontSize","color","lightContrastText","state","contrastText","width","height","Platform","select","ios","android","padding","length","item","_id"],"mappings":"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","sourcesContent":["import {\r\n  View,\r\n  Alert,\r\n  Modal,\r\n  TouchableHighlight,\r\n  Text,\r\n  SafeAreaView,\r\n  KeyboardAvoidingView,\r\n  FlatList,\r\n  Platform,\r\n} from 'react-native';\r\n// import DateTimePickerModal from 'react-native-modal-datetime-picker';\r\nimport React, { useState } from 'react';\r\nimport Header from '../../components/Header';\r\nimport FancyInput from '../../components/FancyInput';\r\nimport FancyButton from '../../components/FancyButton';\r\nimport spacing from '../../theme/spacing';\r\nimport { useDispatch } from 'react-redux';\r\nimport { setupFullName, setupUsername, setupSchool, School } from './setupSlice';\r\nimport setupAPI from './setupAPI';\r\nimport { AppDispatch } from '../../app/store';\r\nimport colors from '../../theme/colors';\r\nimport BackButton from '../../components/BackButton';\r\nimport { Ionicons } from '@expo/vector-icons';\r\nimport { TouchableOpacity, ActivityIndicator } from 'react-native';\r\nimport { SchoolSetupScreenNavigationProp } from '../../navigation/AuthNavigation';\r\n\r\ninterface SchoolStepProps {\r\n  navigation: SchoolSetupScreenNavigationProp;\r\n}\r\n\r\nconst SchoolStep: React.FC<SchoolStepProps> = ({ navigation }: SchoolStepProps) => {\r\n  const dispatch: AppDispatch = useDispatch();\r\n\r\n  const [isSearchLoading, setIsSearchLoading] = useState(false);\r\n  const [schools, setSchools] = useState<School[]>();\r\n  const [schoolModalVisible, setSchoolModalVisible] = useState(false);\r\n  const [schoolInput, setSchoolInput] = useState<string>();\r\n\r\n  const handleSchoolSearch = async (schoolName: string) => {\r\n    setIsSearchLoading(true);\r\n    try {\r\n      const schoolSearchResults = await setupAPI.searchSchools(schoolName);\r\n      setSchools(schoolSearchResults);\r\n    } catch (e) {\r\n      alert(e);\r\n    }\r\n    setIsSearchLoading(false);\r\n  };\r\n\r\n  const SchoolListItem = ({ school }: { school: School }) => {\r\n    const toTitleCase = (str: string) =>\r\n      str.replace(/\\w\\S*/g, (txt: string) => {\r\n        return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();\r\n      });\r\n\r\n    const schoolLevelConverter = (level: number) => {\r\n      switch (level) {\r\n        case 1:\r\n          return 'Elementary School';\r\n        case 2:\r\n          return 'Middle School';\r\n        case 3:\r\n          return 'High School';\r\n        case 4:\r\n          return 'Post-Secondary School';\r\n        default:\r\n          return `Unknown School Type: ${level}`;\r\n      }\r\n    };\r\n\r\n    const schoolName = toTitleCase(school.name);\r\n    const schoolAddress = toTitleCase(school.address);\r\n    const schoolCity = toTitleCase(school.city);\r\n    const schoolType = schoolLevelConverter(school.level);\r\n\r\n    return (\r\n      <TouchableHighlight\r\n        underlayColor={colors.primaryColorLight}\r\n        onPress={() => {\r\n          dispatch(setupSchool(school));\r\n          navigation.navigate('PictureSetup');\r\n        }}\r\n        style={{\r\n          marginTop: 8,\r\n          paddingVertical: 20,\r\n          paddingHorizontal: 10,\r\n          borderRadius: 15,\r\n          minHeight: 80,\r\n          justifyContent: 'flex-start',\r\n          alignItems: 'center',\r\n          flexDirection: 'row',\r\n          backgroundColor: colors.backgroundDifferentiator,\r\n        }}>\r\n        <>\r\n          <Ionicons size={24} name=\"md-school\" style={{ marginHorizontal: 15 }} />\r\n          <View style={{ justifyContent: 'center', flex: 1 }}>\r\n            <Text style={{ fontWeight: 'bold', fontSize: 14, color: colors.lightContrastText }}>\r\n              {schoolType}\r\n            </Text>\r\n            <Text style={{ fontWeight: 'bold', fontSize: 16 }}>{schoolName}</Text>\r\n            <Text style={{ color: colors.lightContrastText }}>\r\n              {schoolAddress} {schoolCity}, {school.state}\r\n            </Text>\r\n          </View>\r\n        </>\r\n      </TouchableHighlight>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <SafeAreaView style={{ backgroundColor: colors.contrastText, alignItems: 'center' }}>\r\n      <KeyboardAvoidingView\r\n        style={{\r\n          width: '85%',\r\n          height: '100%',\r\n          alignItems: 'stretch',\r\n          justifyContent: 'flex-start',\r\n        }}\r\n        behavior={Platform.select({ ios: 'padding', android: null })}>\r\n        <BackButton />\r\n\r\n        <Header\r\n          emoji=\"school\"\r\n          title=\"let's find ur friends\"\r\n          subtitle=\"we'll find people that u might know at ur school\"\r\n        />\r\n\r\n        <FancyInput\r\n          placeholder=\"type in your school's name\"\r\n          onChangeText={schoolName => {\r\n            handleSchoolSearch(schoolName);\r\n            setSchoolInput(schoolName);\r\n          }}\r\n        />\r\n\r\n        {isSearchLoading ? <ActivityIndicator style={{ padding: 10 }} /> : null}\r\n\r\n        {// If no schools are returned and there is a search query, return the no matches found component\r\n        schools?.length === 0 && schoolInput ? (\r\n          <View>\r\n            <Text>No Schools Found</Text>\r\n          </View>\r\n        ) : (\r\n          <FlatList\r\n            keyboardShouldPersistTaps=\"handled\"\r\n            data={schools}\r\n            renderItem={({ item }) => <SchoolListItem school={item} />}\r\n            keyExtractor={school => school._id}\r\n          />\r\n        )}\r\n\r\n        {/* <View style={{ flex: 1, justifyContent: 'flex-end', marginBottom: 10 }}>\r\n          <FancyButton loading={isLoading} onPress={handleSubmit} text=\"next\" />\r\n        </View> */}\r\n      </KeyboardAvoidingView>\r\n    </SafeAreaView>\r\n  );\r\n};\r\n\r\nexport default SchoolStep;\r\n"]},"metadata":{},"sourceType":"module"}