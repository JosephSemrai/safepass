{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { createAsyncThunk, createSlice, createAction } from '@reduxjs/toolkit';\nimport { setAxiosToken } from \"../utils/axios\";\nimport sessionAPI from \"./sessionAPI\";\nvar initialState = {\n  firebaseToken: null,\n  hasCompletedProfile: false,\n  isLoggedIn: false,\n  isFirebaseInitializedAndLoaded: false,\n  isProfileInitializedAndLoaded: false,\n  registrationStep: 'uninitialized',\n  profile: {\n    username: null,\n    fullName: null,\n    biography: null,\n    profilePicture: null,\n    school: null,\n    gender: null\n  }\n};\nexport var setFirebaseToken = createAction('session/setFirebaseToken');\nexport var signedOut = createAction('session/signedOut');\nexport var fetchSessionProfile = createAsyncThunk('session/fetchSessionProfile', function _callee(_, thunkAPI) {\n  var data;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return _regeneratorRuntime.awrap(sessionAPI.getProfile());\n\n        case 3:\n          data = _context.sent;\n          return _context.abrupt(\"return\", data);\n\n        case 7:\n          _context.prev = 7;\n          _context.t0 = _context[\"catch\"](0);\n          thunkAPI.rejectWithValue(_context.t0);\n\n        case 10:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, [[0, 7]], Promise);\n});\nvar sessionSlice = createSlice({\n  name: 'session',\n  initialState: initialState,\n  reducers: {},\n  extraReducers: function extraReducers(builder) {\n    builder.addCase(setFirebaseToken, function (state, action) {\n      state.firebaseToken = action.payload;\n      setAxiosToken(action.payload);\n      state.isLoggedIn = true;\n      state.isFirebaseInitializedAndLoaded = true;\n    });\n    builder.addCase(signedOut, function (state, action) {\n      state.firebaseToken = null;\n      setAxiosToken(null);\n      state.isLoggedIn = false;\n      state.hasCompletedProfile = false;\n      state.isFirebaseInitializedAndLoaded = true;\n      state.isProfileInitializedAndLoaded = true;\n    });\n    builder.addCase(fetchSessionProfile.pending, function (state, action) {});\n    builder.addCase(fetchSessionProfile.fulfilled, function (state, action) {\n      state.isProfileInitializedAndLoaded = true;\n      state.profile = action.payload.profile;\n      state.registrationStep = action.payload.registrationStep;\n\n      if (action.payload.registrationStep === 'finished') {\n        state.hasCompletedProfile = true;\n      }\n    });\n    builder.addCase(fetchSessionProfile.rejected, function (state, action) {});\n  }\n});\nexport default sessionSlice.reducer;","map":{"version":3,"sources":["C:/Users/josep/Documents/GitHub/safepass/src/app/sessionSlice.ts"],"names":["createAsyncThunk","createSlice","createAction","setAxiosToken","sessionAPI","initialState","firebaseToken","hasCompletedProfile","isLoggedIn","isFirebaseInitializedAndLoaded","isProfileInitializedAndLoaded","registrationStep","profile","username","fullName","biography","profilePicture","school","gender","setFirebaseToken","signedOut","fetchSessionProfile","_","thunkAPI","getProfile","data","rejectWithValue","sessionSlice","name","reducers","extraReducers","builder","addCase","state","action","payload","pending","fulfilled","rejected","reducer"],"mappings":"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","sourcesContent":["import {\r\n  createAsyncThunk,\r\n  createSlice,\r\n  unwrapResult,\r\n  createAction,\r\n  PayloadAction,\r\n} from '@reduxjs/toolkit';\r\n\r\nimport { setAxiosToken } from '../utils/axios';\r\nimport sessionAPI from './sessionAPI';\r\nimport { RootState } from './rootReducer';\r\nimport { Alert } from 'react-native';\r\nimport { School } from '../features/login/setupSlice';\r\n\r\n// Sample types that will be used\r\n// interface User {\r\n//   firebaseToken: string\r\n// }\r\n\r\n// interface ValidationErrors {\r\n//   errorMessage: string\r\n// }\r\n\r\n// interface UpdateUserResponse {\r\n//   user: User\r\n//   success: boolean\r\n// }\r\n\r\n// const fetchFirebaseUser = createAsyncThunk<\r\n//   User,\r\n//   Partial<User>,\r\n//   {\r\n//     rejectValue: ValidationErrors\r\n//   }\r\n// >('users/update', async (userToken, { rejectWithValue }) => {\r\n//   try {\r\n//     const { id, ...fields } = userData\r\n//     const response = await userAPI.updateById<UpdateUserResponse>(id, fields)\r\n//     return response.data.user\r\n//   } catch (err) {\r\n//     let error: AxiosError<ValidationErrors> = err // cast the error for access\r\n//     if (!error.response) {\r\n//       throw err\r\n//     }\r\n//     // We got validation errors, let's return those so we can reference in our component and set form errors\r\n//     return rejectWithValue(error.response.data)\r\n//   }\r\n// })\r\n\r\nexport interface UserProfileResponse {\r\n  registrationStep: string;\r\n  profile: UserProfile;\r\n}\r\nexport interface UserProfile {\r\n  username: string;\r\n  fullName: string;\r\n  biography: string;\r\n  profilePicture: string;\r\n  school: School;\r\n  gender: string;\r\n}\r\n\r\ninterface SessionState {\r\n  registrationStep: string;\r\n  firebaseToken: string | null;\r\n  hasCompletedProfile: boolean;\r\n  isLoggedIn: boolean;\r\n  isFirebaseInitializedAndLoaded: boolean;\r\n  isProfileInitializedAndLoaded: boolean;\r\n  profile: UserProfile;\r\n}\r\n\r\nconst initialState: SessionState = {\r\n  firebaseToken: null,\r\n  hasCompletedProfile: false,\r\n  isLoggedIn: false,\r\n  // IS LOADING FALSE = HAS BEEN INITIALIZED, NOT NECESSARILY LOADING\r\n  isFirebaseInitializedAndLoaded: false,\r\n  isProfileInitializedAndLoaded: false,\r\n  registrationStep: 'uninitialized',\r\n  profile: {\r\n    username: null,\r\n    fullName: null,\r\n    biography: null,\r\n    profilePicture: null,\r\n    school: null,\r\n    gender: null,\r\n  },\r\n};\r\n\r\nexport const setFirebaseToken = createAction<string>('session/setFirebaseToken');\r\nexport const signedOut = createAction('session/signedOut');\r\n\r\nexport const fetchSessionProfile = createAsyncThunk(\r\n  'session/fetchSessionProfile',\r\n  async (_, thunkAPI: any) => {\r\n    try {\r\n      const data = await sessionAPI.getProfile();\r\n      // alert(JSON.stringify(data));\r\n      return data;\r\n    } catch (e) {\r\n      thunkAPI.rejectWithValue(e);\r\n    }\r\n  }\r\n);\r\n\r\nconst sessionSlice = createSlice({\r\n  name: 'session',\r\n  initialState,\r\n  reducers: {},\r\n  extraReducers: builder => {\r\n    // The `builder` callback form is used here because it provides correctly typed reducers from the action creators\r\n    builder.addCase(setFirebaseToken, (state, action: PayloadAction<string>) => {\r\n      state.firebaseToken = action.payload;\r\n\r\n      // Sets the axios token so that we can make authorized requests\r\n      setAxiosToken(action.payload);\r\n      state.isLoggedIn = true;\r\n      state.isFirebaseInitializedAndLoaded = true;\r\n    });\r\n\r\n    builder.addCase(signedOut, (state, action: PayloadAction) => {\r\n      state.firebaseToken = null;\r\n\r\n      // Sets the axios token so that we can make authorized requests\r\n      setAxiosToken(null);\r\n      state.isLoggedIn = false;\r\n      state.hasCompletedProfile = false;\r\n      state.isFirebaseInitializedAndLoaded = true;\r\n      state.isProfileInitializedAndLoaded = true;\r\n    });\r\n\r\n    builder.addCase(fetchSessionProfile.pending, (state, action) => {});\r\n\r\n    // Successfully retrieved profile for the app to use\r\n    builder.addCase(\r\n      fetchSessionProfile.fulfilled,\r\n      (state, action: PayloadAction<UserProfileResponse>) => {\r\n        state.isProfileInitializedAndLoaded = true;\r\n\r\n        state.profile = action.payload.profile;\r\n        state.registrationStep = action.payload.registrationStep;\r\n\r\n        if (action.payload.registrationStep === 'finished') {\r\n          state.hasCompletedProfile = true;\r\n        }\r\n      }\r\n    );\r\n\r\n    // Was unable to retrieve the profile for the app to use\r\n    builder.addCase(fetchSessionProfile.rejected, (state, action) => {});\r\n  },\r\n});\r\n\r\nexport default sessionSlice.reducer;\r\n"]},"metadata":{},"sourceType":"module"}